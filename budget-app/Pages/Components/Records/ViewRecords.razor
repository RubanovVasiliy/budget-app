@using budget_app.Data
@if (Records == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="container text-center my-4">
        <div class="row my-4">
            <div class="col">
                <div class="alert alert-warning p-3 " role="alert">
                    Balance: @Records.Sum(item => item.Cost)
                </div>
            </div>
            <div class="col">
                <div class="alert alert-danger p-3 " role="alert">
                    Expense: @Records.Where(item => item.Cost < 0).Sum(item => item.Cost)
                </div>
            </div>
            <div class="col">
                <div class="alert alert-success p-3 " role="alert">
                    Income: @Records.Where(item => item.Cost > 0).Sum(item => item.Cost)
                </div>
            </div>
        </div>
        <div>
            <table class="table">
                <thead>
                <tr>
                    <th>Description</th>
                    <th>Category</th>
                    <th>Cost</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var record in Records)
                {
                    <tr @onclick="() => { OnRecordClick.InvokeAsync(record); }">
                        <td>
                            <input class="form-control" type="edit" @bind="@record.Description" id="Description" placeholder="@record.Description"/>
                        </td>
                        <td>
                            <select class="form-control" type="edit" @bind="@record.Category" id="Category" placeholder="@record.Category">
                                @foreach (var category in Enum.GetNames(typeof(RecordCategory)))
                                {
                                    <option value="@category">@category</option>
                                }
                            </select>
                        </td>
                        <td>
                            <input class="form-control" type="edit" @bind="@record.Cost" id="Cost" placeholder="@record.Cost"/>
                        </td>
                        <td class="col-2">
                            <button class="btn btn-outline-danger" @onclick="@(async () => await DeleteRecord.InvokeAsync(record))">Remove</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}

<style>
    input[type=create],input[type=edit],select[type=edit] {
        text-align: center;
        border: none;
        margin: 0;
    }
    
    input[type=edit]:focus{
        outline: none;
        box-shadow: 0 0 0 1px #294eff;}
    
    select[type=edit]:focus{
         outline: none;
         box-shadow: 0 0 0 1px #294eff;
    }
    
    select {
        background-color: transparent;
        width: 100%;
        border-radius: 12px;
        border: none;
        margin: 5px 0;
        display: inline-block;
        font-size: xxx-large;
        text-align: center;
        -webkit-appearance: none;
        -moz-appearance: none;
        text-indent: 1px;
        text-overflow: '';
    }
</style>
